version: 2.1

scala_212: &scala_212
  SCALA_VERSION: 2.12.12

scala_213: &scala_213
  SCALA_VERSION: 2.13.3

jdk8_image: &jdk8_image
  docker:
    - image: hseeberger/scala-sbt:8u265_1.3.13_2.13.3

jdk11_image: &jdk11_image
  docker:
    - image: hseeberger/scala-sbt:11.0.8_1.3.13_2.13.3

install_node: &install_node
  - run:
      name: Install Node.js
      command: |
        apt-get install -y curl
        curl -sL https://deb.nodesource.com/setup_14.x | bash -
        apt-get install -y nodejs
        node -v

load_cache: &load_cache
  - restore_cache:
      key: sbt-cache-interop-cats

clean_cache: &clean_cache
  - run:
      name: Clean unwanted files from cache
      command: |
        rm -fv $HOME/.ivy2/.sbt.ivy.lock
        find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
        find $HOME/.sbt        -name "*.lock"               -print -delete

save_cache: &save_cache
  - save_cache:
      key: sbt-cache-interop-cats
      paths:
          - "~/.ivy2/cache"
          - "~/.sbt"
          - "~/.m2"
          - "~/.cache"

filter_tags: &filter_tags
  tags:
    only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

lint: &lint
  steps:
    - checkout
    - <<: *load_cache
    - run:
        name: Lint code
        command: sbt ++${SCALA_VERSION}! check
    - <<: *clean_cache
    - <<: *save_cache

testJVM: &testJVM
  steps:
    - checkout
    - <<: *load_cache
    - run:
        name: Run tests
        command: sbt ++${SCALA_VERSION}! testJVM
    - <<: *clean_cache
    - <<: *save_cache
    - store_test_results:
        path: core-tests/jvm/target/test-reports

testJS: &testJS
  steps:
    - checkout
    - <<: *load_cache
    - <<: *install_node
    - run:
        name: Run tests
        command: sbt ++${SCALA_VERSION}! testJS
    - <<: *clean_cache
    - <<: *save_cache
    - store_test_results:
        path: core-tests/js/target/test-reports

release: &release
  steps:
      - checkout
      - run:
          name: Fetch git tags
          command: git fetch --tags
      - <<: *load_cache
      - run:
          name: Write sonatype credentials
          command: echo "credentials += Credentials(\"Sonatype Nexus Repository Manager\", \"oss.sonatype.org\", \"${SONATYPE_USER}\", \"${SONATYPE_PASSWORD}\")" > ~/.sbt/1.0/sonatype.sbt
      - run:
          name: Write PGP public key
          command: echo -n "${PGP_PUBLIC}" | base64 -di > /tmp/public.asc
      - run:
          name: Write PGP secret key
          command: echo -n "${PGP_SECRET}" | base64 -di > /tmp/secret.asc
      - run:
          name: Release artifacts
          command: |
            mkdir -p $HOME/bin
            sudo apt-get update && sudo apt-get -y install gnupg2
            echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
            echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
            chmod 600 ~/.gnupg/*
            ln -s /usr/bin/gpg2 $HOME/bin/gpg
            $HOME/bin/gpg --version
            echo RELOADAGENT | gpg-connect-agent
            echo $PGP_SECRET | base64 -di | gpg2 --import --no-tty --batch --yes
            PATH=$HOME/bin:$PATH sbt ++${SCALA_VERSION}! clean ci-release

jobs:
  lint:
    <<: *lint
    <<: *jdk8_image
    environment:
      - <<: *scala_212

  test_212_jdk8_jvm:
    <<: *testJVM
    <<: *jdk8_image
    environment:
      - <<: *scala_212

  test_213_jdk8_jvm:
    <<: *testJVM
    <<: *jdk8_image
    environment:
      - <<: *scala_213

  test_212_jdk11_jvm:
    <<: *testJVM
    <<: *jdk11_image
    environment:
      - <<: *scala_212

  test_212_jdk8_js:
    <<: *testJS
    <<: *jdk8_image
    environment:
      - <<: *scala_212

  test_213_jdk8_js:
    <<: *testJS
    <<: *jdk8_image
    environment:
      - <<: *scala_213

  release:
    <<: *release
    <<: *jdk8_image
    environment:
      - <<: *scala_213

workflows:
  version: 2
  build:
    jobs:
      - lint:
          filters:
            <<: *filter_tags
      - test_212_jdk8_jvm:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - test_213_jdk8_jvm:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - test_212_jdk11_jvm:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - test_212_jdk8_js:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - test_213_jdk8_js:
          requires:
            - lint
          filters:
            <<: *filter_tags
      - release:
          context: Sonatype2
          requires:
            - test_212_jdk8_jvm
            - test_212_jdk11_jvm
            - test_212_jdk8_js
            - test_213_jdk8_jvm
            - test_213_jdk8_js
          filters:
            <<: *filter_tags
            branches:
              only:
                - master

